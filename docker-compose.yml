version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fleetlink_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: fleetlink123
      MONGO_INITDB_DATABASE: fleetlink
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fleetlink_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017/fleetlink --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # FleetLink Backend API
  fleetlink_backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: fleetlink_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:fleetlink123@mongodb:27017/fleetlink?authSource=admin
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      LOG_LEVEL: info
      LOG_FORMAT: combined
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fleetlink_network
    volumes:
      - ./logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 5000, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Express (Optional - for database management)
  mongo_express:
    image: mongo-express:1.0.0
    container_name: fleetlink_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: fleetlink123
      ME_CONFIG_MONGODB_URL: mongodb://admin:fleetlink123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: fleetlink
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - fleetlink_network
    profiles:
      - tools # Only start with --profile tools

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: fleetlink_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      fleetlink_backend:
        condition: service_healthy
    networks:
      - fleetlink_network
    profiles:
      - production # Only start with --profile production

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/mongodb

networks:
  fleetlink_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

